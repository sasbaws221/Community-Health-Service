/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CommunitySupport as PrismaCommunitySupport,
  User as PrismaUser,
} from "@prisma/client";

export class CommunitySupportServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CommunitySupportCountArgs, "select">
  ): Promise<number> {
    return this.prisma.communitySupport.count(args);
  }

  async communitySupports(
    args: Prisma.CommunitySupportFindManyArgs
  ): Promise<PrismaCommunitySupport[]> {
    return this.prisma.communitySupport.findMany(args);
  }
  async communitySupport(
    args: Prisma.CommunitySupportFindUniqueArgs
  ): Promise<PrismaCommunitySupport | null> {
    return this.prisma.communitySupport.findUnique(args);
  }
  async createCommunitySupport(
    args: Prisma.CommunitySupportCreateArgs
  ): Promise<PrismaCommunitySupport> {
    return this.prisma.communitySupport.create(args);
  }
  async updateCommunitySupport(
    args: Prisma.CommunitySupportUpdateArgs
  ): Promise<PrismaCommunitySupport> {
    return this.prisma.communitySupport.update(args);
  }
  async deleteCommunitySupport(
    args: Prisma.CommunitySupportDeleteArgs
  ): Promise<PrismaCommunitySupport> {
    return this.prisma.communitySupport.delete(args);
  }

  async getSender(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.communitySupport
      .findUnique({
        where: { id: parentId },
      })
      .sender();
  }
}
