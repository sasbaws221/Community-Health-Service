/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { DiscussionWhereUniqueInput } from "../../discussion/base/DiscussionWhereUniqueInput";
import { HealthAndWellnessWhereUniqueInput } from "../../healthAndWellness/base/HealthAndWellnessWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { LocalEventWhereUniqueInput } from "../../localEvent/base/LocalEventWhereUniqueInput";
import { ResourcesAndAdviceWhereUniqueInput } from "../../resourcesAndAdvice/base/ResourcesAndAdviceWhereUniqueInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class CommentWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  comments?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => DiscussionWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DiscussionWhereUniqueInput)
  @IsOptional()
  @Field(() => DiscussionWhereUniqueInput, {
    nullable: true,
  })
  discussions?: DiscussionWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => HealthAndWellnessWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => HealthAndWellnessWhereUniqueInput)
  @IsOptional()
  @Field(() => HealthAndWellnessWhereUniqueInput, {
    nullable: true,
  })
  healthAndWellnesses?: HealthAndWellnessWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => LocalEventWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => LocalEventWhereUniqueInput)
  @IsOptional()
  @Field(() => LocalEventWhereUniqueInput, {
    nullable: true,
  })
  localEvents?: LocalEventWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ResourcesAndAdviceWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ResourcesAndAdviceWhereUniqueInput)
  @IsOptional()
  @Field(() => ResourcesAndAdviceWhereUniqueInput, {
    nullable: true,
  })
  resourcesAndAdvices?: ResourcesAndAdviceWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  title?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput;
}

export { CommentWhereInput as CommentWhereInput };
