/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsDate,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { Discussion } from "../../discussion/base/Discussion";
import { HealthAndWellness } from "../../healthAndWellness/base/HealthAndWellness";
import { LocalEvent } from "../../localEvent/base/LocalEvent";
import { ResourcesAndAdvice } from "../../resourcesAndAdvice/base/ResourcesAndAdvice";
import { User } from "../../user/base/User";

@ObjectType()
class Comment {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  comments!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => Discussion,
  })
  @ValidateNested()
  @Type(() => Discussion)
  @IsOptional()
  discussions?: Discussion | null;

  @ApiProperty({
    required: false,
    type: () => HealthAndWellness,
  })
  @ValidateNested()
  @Type(() => HealthAndWellness)
  @IsOptional()
  healthAndWellnesses?: HealthAndWellness | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => LocalEvent,
  })
  @ValidateNested()
  @Type(() => LocalEvent)
  @IsOptional()
  localEvents?: LocalEvent | null;

  @ApiProperty({
    required: false,
    type: () => ResourcesAndAdvice,
  })
  @ValidateNested()
  @Type(() => ResourcesAndAdvice)
  @IsOptional()
  resourcesAndAdvices?: ResourcesAndAdvice | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => User,
  })
  @ValidateNested()
  @Type(() => User)
  @IsOptional()
  user?: User | null;
}

export { Comment as Comment };
