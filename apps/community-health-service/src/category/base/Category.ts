/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumCategoryCategories } from "./EnumCategoryCategories";
import {
  IsEnum,
  IsOptional,
  IsDate,
  ValidateNested,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { Education } from "../../education/base/Education";
import { HealthAndWellness } from "../../healthAndWellness/base/HealthAndWellness";
import { ResourcesAndAdvice } from "../../resourcesAndAdvice/base/ResourcesAndAdvice";

@ObjectType()
class Category {
  @ApiProperty({
    required: false,
    enum: EnumCategoryCategories,
  })
  @IsEnum(EnumCategoryCategories)
  @IsOptional()
  @Field(() => EnumCategoryCategories, {
    nullable: true,
  })
  categories?:
    | "MentalHealth"
    | "Fitness"
    | "Nutrition"
    | "GeneralHealth"
    | "ChronicCondition"
    | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [Education],
  })
  @ValidateNested()
  @Type(() => Education)
  @IsOptional()
  educations?: Array<Education>;

  @ApiProperty({
    required: false,
    type: () => HealthAndWellness,
  })
  @ValidateNested()
  @Type(() => HealthAndWellness)
  @IsOptional()
  healthAndWellnesses?: HealthAndWellness | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => [ResourcesAndAdvice],
  })
  @ValidateNested()
  @Type(() => ResourcesAndAdvice)
  @IsOptional()
  resourcesAndAdvices?: Array<ResourcesAndAdvice>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Category as Category };
