/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumCategoryCategories } from "./EnumCategoryCategories";
import { IsEnum, IsOptional, ValidateNested } from "class-validator";
import { EducationListRelationFilter } from "../../education/base/EducationListRelationFilter";
import { Type } from "class-transformer";
import { HealthAndWellnessWhereUniqueInput } from "../../healthAndWellness/base/HealthAndWellnessWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { ResourcesAndAdviceListRelationFilter } from "../../resourcesAndAdvice/base/ResourcesAndAdviceListRelationFilter";

@InputType()
class CategoryWhereInput {
  @ApiProperty({
    required: false,
    enum: EnumCategoryCategories,
  })
  @IsEnum(EnumCategoryCategories)
  @IsOptional()
  @Field(() => EnumCategoryCategories, {
    nullable: true,
  })
  categories?:
    | "MentalHealth"
    | "Fitness"
    | "Nutrition"
    | "GeneralHealth"
    | "ChronicCondition";

  @ApiProperty({
    required: false,
    type: () => EducationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EducationListRelationFilter)
  @IsOptional()
  @Field(() => EducationListRelationFilter, {
    nullable: true,
  })
  educations?: EducationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => HealthAndWellnessWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => HealthAndWellnessWhereUniqueInput)
  @IsOptional()
  @Field(() => HealthAndWellnessWhereUniqueInput, {
    nullable: true,
  })
  healthAndWellnesses?: HealthAndWellnessWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => ResourcesAndAdviceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ResourcesAndAdviceListRelationFilter)
  @IsOptional()
  @Field(() => ResourcesAndAdviceListRelationFilter, {
    nullable: true,
  })
  resourcesAndAdvices?: ResourcesAndAdviceListRelationFilter;
}

export { CategoryWhereInput as CategoryWhereInput };
